{"version":3,"sources":["webpack://js_project_skeleton/webpack/bootstrap","webpack://js_project_skeleton/webpack/runtime/define property getters","webpack://js_project_skeleton/webpack/runtime/hasOwnProperty shorthand","webpack://js_project_skeleton/./src/scripts/bomb.js","webpack://js_project_skeleton/./src/scripts/dino.js","webpack://js_project_skeleton/./src/index.js","webpack://js_project_skeleton/./src/scripts/game.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Bomb","this","bomb","document","getElementById","classList","toggle","dino","add","setTimeout","remove","game","Dino","score","highscore","instruction","background","removeEventListener","event","style","animationDelay","animationDuration","contains","parseInt","innerText","split","scoreInterval","setInterval","innerHTML","replace","addEventListener","e","code","jump","dinoTop","window","getComputedStyle","getPropertyValue","dinoWidth","dinoLeft","bombLeft","bombtop","lost","clearInterval","consol","log","onclick","play","enter"],"mappings":"yBACA,IAAIA,EAAsB,CCA1B,EAAwB,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,SAASM,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,K,2MCA1EI,E,WACjB,c,4FAAa,SACTC,KAAKC,KAAOC,SAASC,eAAe,Q,4CAGxC,WACIH,KAAKC,KAAKG,UAAUC,OAAO,iB,gMCSnC,E,WAdI,c,4FAAa,SACTL,KAAKM,KAAOJ,SAASC,eAAe,Q,yCAGxC,WAAM,WACHH,KAAKM,KAAKF,UAAUG,IAAI,kBACxBC,YAAW,WACP,EAAKF,KAAKF,UAAUK,OAAO,oBAC5B,U,gMCNNC,EAAO,I,WCKP,c,4FAAa,SACTV,KAAKM,KAAO,IAAIK,EAChBX,KAAKC,KAAO,IAAIF,EAChBC,KAAKY,MAAQV,SAASC,eAAe,SACrCH,KAAKa,UAAYX,SAASC,eAAe,aACzCH,KAAKc,YAAcZ,SAASC,eAAe,gBAC3CH,KAAKe,WAAab,SAASC,eAAe,kB,yCAG9C,WAAM,WACFD,SAASc,oBAAoB,WAAYC,GACzCjB,KAAKe,WAAWG,MAAMC,eAAiB,KACvCnB,KAAKe,WAAWG,MAAME,kBAAoB,cAC1CpB,KAAKC,KAAKA,KAAKiB,MAAMC,eAAe,KACpCnB,KAAKC,KAAKA,KAAKiB,MAAME,kBAAoB,OAErClB,SAASC,eAAe,kBAAkBC,UAAUiB,SAAS,oBAC7DnB,SAASC,eAAe,kBAAkBC,UAAUK,OAAO,kBAC3DP,SAASC,eAAe,kBAAkBC,UAAUG,IAAI,wBAExDL,SAASC,eAAe,QAAQC,UAAUiB,SAAS,cACnDnB,SAASC,eAAe,QAAQC,UAAUK,OAAO,YACjDP,SAASC,eAAe,QAAQC,UAAUG,IAAI,SAElD,IAAIK,EAAQU,SAAStB,KAAKY,MAAMW,UAAUC,MAAM,KAAK,IACjDX,EAAYS,SAAStB,KAAKa,UAAUU,UAAUC,MAAM,KAAK,IAEzDC,EAAgBC,aAAY,WAC5B,EAAKd,MAAMW,UAAX,UAA0BX,IAA1B,YACA,EAAKE,YAAYS,UAAjB,0BAAgDX,EAAQ,EAAxD,2CACA,EAAKE,YAAYa,UAAY,EAAKb,YAAYa,UAAUC,QAA3B,UAAsChB,EAAQ,GAA9C,wCAAoFA,EAAQ,EAA5F,YAIhB,KAATA,IACA,EAAKG,WAAWG,MAAMC,eAAiB,QACvC,EAAKJ,WAAWG,MAAME,kBAAtB,cACA,EAAKnB,KAAKA,KAAKiB,MAAMC,eAAiB,QACtC,EAAKlB,KAAKA,KAAKiB,MAAME,kBAArB,UAES,KAATR,IACA,EAAKG,WAAWG,MAAMC,eAAiB,SACvC,EAAKJ,WAAWG,MAAME,kBAAtB,aACA,EAAKnB,KAAKA,KAAKiB,MAAMC,eAAiB,SACtC,EAAKlB,KAAKA,KAAKiB,MAAME,kBAArB,SAES,KAATR,IACA,EAAKG,WAAWG,MAAMC,eAAiB,QACvC,EAAKJ,WAAWG,MAAME,kBAAtB,aACA,EAAKnB,KAAKA,KAAKiB,MAAMC,eAAiB,QACtC,EAAKlB,KAAKA,KAAKiB,MAAME,kBAArB,WAGS,KAATR,IACA,EAAKG,WAAWG,MAAMC,eAAiB,OACvC,EAAKJ,WAAWG,MAAME,kBAAtB,aACA,EAAKnB,KAAKA,KAAKiB,MAAMC,eAAiB,QACtC,EAAKlB,KAAKA,KAAKiB,MAAME,kBAArB,UAEAR,EAAQC,IACR,EAAKA,UAAUU,UAAf,UAA8BV,IAA9B,gBACA,EAAKC,YAAYS,UAAjB,gDAKL,KAGHrB,SAAS2B,iBAAiB,YAAY,SAACC,GACpB,UAAXA,EAAEC,MAAqB7B,SAASC,eAAe,QAAQC,UAAUiB,SAAS,mBAC1E,EAAKf,KAAK0B,UAIlB,IAAItB,EAAOgB,aAAY,WACnB,IAAMO,EAAUX,SAASY,OAAOC,iBAAiB,EAAK7B,KAAKA,MAAM8B,iBAAiB,QAC5EC,EAAYf,SAASY,OAAOC,iBAAiB,EAAK7B,KAAKA,MAAM8B,iBAAiB,UAC9EE,EAAWhB,SAASY,OAAOC,iBAAiB,EAAK7B,KAAKA,MAAM8B,iBAAiB,SAC7EG,EAAWjB,SAASY,OAAOC,iBAAiB,EAAKlC,KAAKA,MAAMmC,iBAAiB,SAC7EI,EAAUlB,SAASY,OAAOC,iBAAiB,EAAKlC,KAAKA,MAAMmC,iBAAiB,QAG9EG,EAAWD,GAAYC,EAAYD,EAAYD,EAAY,KAASJ,EAAUO,IAC9E,EAAKC,OACLC,cAAcjB,GACdiB,cAAchC,GACdiC,OAAOC,IAAI,WAIhB,M,kBAIP,WAEI,QAAI1C,SAASC,eAAe,kBAAkBC,UAAUiB,SAAS,yBAC7DnB,SAASC,eAAe,kBAAkBC,UAAUK,OAAO,uBAC3DP,SAASC,eAAe,kBAAkBC,UAAUG,IAAI,kBACxDP,KAAKY,MAAMW,UAAY,YACvBrB,SAAS2B,iBAAiB,WAAYZ,IAC/B,Q,uBDzGPf,SAASC,eAAe,gBAE9B0C,QAAU,kBAAMnC,EAAKoC,QAE3B,IAAMC,EAAQ,SAASjB,GACA,UAAXA,EAAEC,MACFrB,EAAKoC,QAIjB5C,SAAS2B,iBAAiB,WAAYkB,GAEtC,Q","file":"main.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default class Bomb {\n    constructor(){\n        this.bomb = document.getElementById(\"bomb\")\n    }\n\n    explode(){\n        this.bomb.classList.toggle(\"exploded\")\n        \n    }\n}","class Dino {\n    constructor(){\n        this.dino = document.getElementById(\"dino\")\n    }\n\n    jump(){\n       this.dino.classList.add(\"jump-animation\") \n       setTimeout(() => {\n           this.dino.classList.remove(\"jump-animation\")\n       }, 500);\n    }\n\n}\n\n\nexport default Dino\n\n\n","import \"./styles/index.scss\";\nimport Game from './scripts/game'\nimport Dino from './scripts/dino'\nlet game = new Game()\n\nlet start = document.getElementById(\"start-button\")\n\nstart.onclick = () => game.play() \n\nconst enter = function(e) {\n        if (e.code === 'Enter') {\n            game.play()\n        }\n}\n\ndocument.addEventListener(\"keypress\", enter)\n\nexport default enter","\nimport variables from \"../styles/variables.scss\"\nimport \"../styles/index.scss\";\nimport Bomb from './bomb'\nimport Dino from './dino'\nimport event from '../index'\n\nclass Game{\n    constructor(){\n        this.dino = new Dino();\n        this.bomb = new Bomb();\n        this.score = document.getElementById(\"score\");\n        this.highscore = document.getElementById(\"highscore\");\n        this.instruction = document.getElementById(\"instructions\");\n        this.background = document.getElementById(\"game-component\")\n    }\n\n    play(){\n        document.removeEventListener(\"keypress\", event);\n        this.background.style.animationDelay = \"0s\";\n        this.background.style.animationDuration = \"1500000000s\";\n        this.bomb.bomb.style.animationDelay=\"0s\";\n        this.bomb.bomb.style.animationDuration = \"2.5s\";\n\n        if (document.getElementById(\"game-component\").classList.contains(\"game-component\")){\n            document.getElementById(\"game-component\").classList.remove(\"game-component\")\n            document.getElementById(\"game-component\").classList.add(\"play-game-component\")\n        }\n        if (document.getElementById(\"bomb\").classList.contains(\"exploded\")){\n            document.getElementById(\"bomb\").classList.remove(\"exploded\")\n            document.getElementById(\"bomb\").classList.add(\"bomb\")\n        }\n        let score = parseInt(this.score.innerText.split(\":\")[0]);\n        let highscore = parseInt(this.highscore.innerText.split(\":\")[0]);\n        \n        let scoreInterval = setInterval(() => {\n            this.score.innerText = `${score++} : score`;\n            this.instruction.innerText = ` your score was ${score - 1}!\\n you can do better :P \\n play again?`;\n            this.instruction.innerHTML = this.instruction.innerHTML.replace(`${score - 1}`, `<span style=\"color: skyblue;\">${score - 1}</span>`);\n            \n            \n            \n            if (score == 100){\n                this.background.style.animationDelay = \"-1.2s\";\n                this.background.style.animationDuration = `1125000000s`;\n                this.bomb.bomb.style.animationDelay = \"-1.2s\";\n                this.bomb.bomb.style.animationDuration = `1.875s`;\n            }\n            if (score == 200){\n                this.background.style.animationDelay = \"-0.29s\";\n                this.background.style.animationDuration = `750000000s`;\n                this.bomb.bomb.style.animationDelay = \"-0.29s\";\n                this.bomb.bomb.style.animationDuration = `1.25s`;      \n            }\n            if (score == 300){\n                this.background.style.animationDelay = \"-0.1s\";\n                this.background.style.animationDuration = `562500000s`;\n                this.bomb.bomb.style.animationDelay = \"-0.1s\";\n                this.bomb.bomb.style.animationDuration = `0.9375s`;\n                \n            }\n            if (score == 500) {\n                this.background.style.animationDelay = \"0.8s\";\n                this.background.style.animationDuration = `375000000s`;\n                this.bomb.bomb.style.animationDelay = \"-0.8s\";\n                this.bomb.bomb.style.animationDuration = `0.625s`;\n            }\n            if (score > highscore){\n                this.highscore.innerText = `${highscore++} : highscore`;\n                this.instruction.innerText = ` you beat your highscore!!! \\n play again?`;\n            }\n\n\n\n        }, 100)\n        \n       \n        document.addEventListener(\"keypress\", (e) => {\n            if (e.code === 'Space' && !document.getElementById(\"dino\").classList.contains('jump-animation')) {\n                this.dino.jump()\n            } \n        })\n\n        let game = setInterval(() =>{\n            const dinoTop = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('top'))\n            const dinoWidth = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('width'))\n            const dinoLeft = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('left'))\n            const bombLeft = parseInt(window.getComputedStyle(this.bomb.bomb).getPropertyValue('left'))\n            const bombtop = parseInt(window.getComputedStyle(this.bomb.bomb).getPropertyValue('top'))\n            \n            \n            if (bombLeft > dinoLeft && bombLeft < (dinoLeft +  dinoWidth - 100)  && dinoTop > bombtop ){ \n                this.lost()\n                clearInterval(scoreInterval)\n                clearInterval(game)\n                consol.log(\"lost\")\n            }\n\n\n        }, 10)\n    }\n\n\n    lost(){\n       \n        if (document.getElementById(\"game-component\").classList.contains(\"play-game-component\")) {\n            document.getElementById(\"game-component\").classList.remove(\"play-game-component\")\n            document.getElementById(\"game-component\").classList.add(\"game-component\")\n            this.score.innerText = \"0 : score\";\n            document.addEventListener(\"keypress\", event);\n            return true\n        } else {\n            return false\n        }\n\n        // this.instruction.innerText = `${this.score}`\n        // this.score.innerText=\"0 : score\";\n    }\n \n\n \n}\nexport default Game "],"sourceRoot":""}