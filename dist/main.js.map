{"version":3,"sources":["webpack://js_project_skeleton/./src/scripts/bomb.js","webpack://js_project_skeleton/./src/scripts/dino.js","webpack://js_project_skeleton/./src/index.js","webpack://js_project_skeleton/./src/scripts/game.js"],"names":["Bomb","this","bomb","document","getElementById","classList","toggle","dino","add","setTimeout","remove","game","Dino","score","highscore","contains","parseInt","innerText","split","scoreInterval","setInterval","addEventListener","e","code","jump","dinoTop","window","getComputedStyle","getPropertyValue","dinoWidth","dinoLeft","bombLeft","bombtop","explode","lost","clearInterval","onclick","play"],"mappings":"mMAAqBA,E,WACjB,c,4FAAa,SACTC,KAAKC,KAAOC,SAASC,eAAe,Q,4CAGxC,WACIH,KAAKC,KAAKG,UAAUC,OAAO,iB,gMCSnC,E,WAdI,c,4FAAa,SACTL,KAAKM,KAAOJ,SAASC,eAAe,Q,yCAGxC,WAAM,WACHH,KAAKM,KAAKF,UAAUG,IAAI,kBACxBC,YAAW,WACP,EAAKF,KAAKF,UAAUK,OAAO,oBAC5B,U,gMCNNC,EAAO,I,WCIP,c,4FAAa,SACTV,KAAKM,KAAO,IAAIK,EAChBX,KAAKC,KAAO,IAAIF,EAChBC,KAAKY,MAAQV,SAASC,eAAe,SACrCH,KAAKa,UAAYX,SAASC,eAAe,a,yCAG7C,WAAM,WACED,SAASC,eAAe,kBAAkBC,UAAUU,SAAS,oBAC7DZ,SAASC,eAAe,kBAAkBC,UAAUK,OAAO,kBAC3DP,SAASC,eAAe,kBAAkBC,UAAUG,IAAI,wBAExDL,SAASC,eAAe,QAAQC,UAAUU,SAAS,cACnDZ,SAASC,eAAe,QAAQC,UAAUK,OAAO,YACjDP,SAASC,eAAe,QAAQC,UAAUG,IAAI,SAElD,IAAIK,EAAQG,SAASf,KAAKY,MAAMI,UAAUC,MAAM,KAAK,IACjDJ,EAAYE,SAASf,KAAKa,UAAUG,UAAUC,MAAM,KAAK,IAGzDC,EAAgBC,aAAY,WAC5B,EAAKP,MAAMI,UAAX,UAA0BJ,IAA1B,YAEIA,EAAQC,IACR,EAAKA,UAAUG,UAAf,UAA8BH,IAA9B,mBAEL,KAGHX,SAASkB,iBAAiB,YAAY,SAACC,GACpB,UAAXA,EAAEC,MAAqBpB,SAASC,eAAe,QAAQC,UAAUU,SAAS,mBAC1E,EAAKR,KAAKiB,UAIlB,IAAIb,EAAOS,aAAY,WACnB,IAAMK,EAAUT,SAASU,OAAOC,iBAAiB,EAAKpB,KAAKA,MAAMqB,iBAAiB,QAC5EC,EAAYb,SAASU,OAAOC,iBAAiB,EAAKpB,KAAKA,MAAMqB,iBAAiB,UAC9EE,EAAWd,SAASU,OAAOC,iBAAiB,EAAKpB,KAAKA,MAAMqB,iBAAiB,SAC7EG,EAAWf,SAASU,OAAOC,iBAAiB,EAAKzB,KAAKA,MAAM0B,iBAAiB,SAC7EI,EAAUhB,SAASU,OAAOC,iBAAiB,EAAKzB,KAAKA,MAAM0B,iBAAiB,QAG9EG,EAAWD,GAAYC,EAAYD,EAAYD,EAAY,KAASJ,EAAUO,IAC9E,EAAK9B,KAAK+B,UACV,EAAKC,OACLC,cAAchB,GACdgB,cAAcxB,MAInB,M,kBAIP,WACQR,SAASC,eAAe,kBAAkBC,UAAUU,SAAS,yBAC7DZ,SAASC,eAAe,kBAAkBC,UAAUK,OAAO,uBAC3DP,SAASC,eAAe,kBAAkBC,UAAUG,IAAI,mBAG5DP,KAAKY,MAAMI,UAAU,iB,uBD/DjBd,SAASC,eAAe,gBAE9BgC,QAAU,kBAAMzB,EAAK0B,Q","file":"main.js","sourcesContent":["export default class Bomb {\n    constructor(){\n        this.bomb = document.getElementById(\"bomb\")\n    }\n\n    explode(){\n        this.bomb.classList.toggle(\"exploded\")\n        \n    }\n}","class Dino {\n    constructor(){\n        this.dino = document.getElementById(\"dino\")\n    }\n\n    jump(){\n       this.dino.classList.add(\"jump-animation\") \n       setTimeout(() => {\n           this.dino.classList.remove(\"jump-animation\")\n       }, 500);\n    }\n\n}\n\n\nexport default Dino\n\n\n","import \"./styles/index.scss\";\nimport Game from './scripts/game'\nimport Dino from './scripts/dino'\nlet game = new Game()\n\nlet start = document.getElementById(\"start-button\")\n\nstart.onclick = () => game.play() \n\n","\nimport \"../styles/index.scss\";\nimport Bomb from './bomb'\nimport Dino from './dino'\n\n\nclass Game{\n    constructor(){\n        this.dino = new Dino()\n        this.bomb = new Bomb()\n        this.score = document.getElementById(\"score\")\n        this.highscore = document.getElementById(\"highscore\")\n    }\n\n    play(){\n        if (document.getElementById(\"game-component\").classList.contains(\"game-component\")){\n            document.getElementById(\"game-component\").classList.remove(\"game-component\")\n            document.getElementById(\"game-component\").classList.add(\"play-game-component\")\n        }\n        if (document.getElementById(\"bomb\").classList.contains(\"exploded\")){\n            document.getElementById(\"bomb\").classList.remove(\"exploded\")\n            document.getElementById(\"bomb\").classList.add(\"bomb\")\n        }\n        let score = parseInt(this.score.innerText.split(\":\")[0]);\n        let highscore = parseInt(this.highscore.innerText.split(\":\")[0]);\n\n        \n        let scoreInterval = setInterval(() => {\n            this.score.innerText = `${score++} : score`;\n\n            if (score > highscore){\n                this.highscore.innerText = `${highscore++} : highscore`;\n            }\n        }, 100)\n        \n       \n        document.addEventListener(\"keypress\", (e) => {\n            if (e.code === 'Space' && !document.getElementById(\"dino\").classList.contains('jump-animation')) {\n                this.dino.jump()\n            } \n        })\n\n        let game = setInterval(() =>{\n            const dinoTop = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('top'))\n            const dinoWidth = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('width'))\n            const dinoLeft = parseInt(window.getComputedStyle(this.dino.dino).getPropertyValue('left'))\n            const bombLeft = parseInt(window.getComputedStyle(this.bomb.bomb).getPropertyValue('left'))\n            const bombtop = parseInt(window.getComputedStyle(this.bomb.bomb).getPropertyValue('top'))\n            \n            \n            if (bombLeft > dinoLeft && bombLeft < (dinoLeft +  dinoWidth - 100)  && dinoTop > bombtop ){ \n                this.bomb.explode() \n                this.lost()\n                clearInterval(scoreInterval)\n                clearInterval(game)\n            }\n\n\n        }, 50)\n    }\n\n\n    lost(){\n        if (document.getElementById(\"game-component\").classList.contains(\"play-game-component\")) {\n            document.getElementById(\"game-component\").classList.remove(\"play-game-component\")\n            document.getElementById(\"game-component\").classList.add(\"game-component\")\n        }\n\n        this.score.innerText=\"0 : score\"\n    }\n \n\n \n}\nexport default Game "],"sourceRoot":""}