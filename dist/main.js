!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.bomb=document.getElementById("bomb")}var n,o;return n=t,(o=[{key:"explode",value:function(){this.bomb.classList.toggle("exploded")}}])&&e(n.prototype,o),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.dino=document.getElementById("dino")}var t,o;return t=e,(o=[{key:"jump",value:function(){var e=this;this.dino.classList.add("jump-animation"),setTimeout((function(){e.dino.classList.remove("jump-animation")}),500)}}])&&n(t.prototype,o),e}();function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var i=new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.dino=new o,this.bomb=new t,this.score=document.getElementById("score"),this.highscore=document.getElementById("highscore")}var n,i;return n=e,(i=[{key:"play",value:function(){var e=this;document.getElementById("game-component").classList.contains("game-component")&&(document.getElementById("game-component").classList.remove("game-component"),document.getElementById("game-component").classList.add("play-game-component")),document.getElementById("bomb").classList.contains("exploded")&&(document.getElementById("bomb").classList.remove("exploded"),document.getElementById("bomb").classList.add("bomb"));var t=parseInt(this.score.innerText.split(":")[0]),n=parseInt(this.highscore.innerText.split(":")[0]),o=setInterval((function(){e.score.innerText="".concat(t++," : score"),t>n&&(e.highscore.innerText="".concat(n++," : highscore"))}),100);document.addEventListener("keypress",(function(t){"Space"!==t.code||document.getElementById("dino").classList.contains("jump-animation")||e.dino.jump()}));var a=setInterval((function(){var t=parseInt(window.getComputedStyle(e.dino.dino).getPropertyValue("top")),n=parseInt(window.getComputedStyle(e.dino.dino).getPropertyValue("width")),i=parseInt(window.getComputedStyle(e.dino.dino).getPropertyValue("left")),r=parseInt(window.getComputedStyle(e.bomb.bomb).getPropertyValue("left")),c=parseInt(window.getComputedStyle(e.bomb.bomb).getPropertyValue("top"));r>i&&r<i+n-100&&t>c&&(e.bomb.explode(),e.lost(),clearInterval(o),clearInterval(a))}),50)}},{key:"lost",value:function(){document.getElementById("game-component").classList.contains("play-game-component")&&(document.getElementById("game-component").classList.remove("play-game-component"),document.getElementById("game-component").classList.add("game-component")),this.score.innerText="0 : score"}}])&&a(n.prototype,i),e}());document.getElementById("start-button").onclick=function(){return i.play()}}();
//# sourceMappingURL=main.js.map